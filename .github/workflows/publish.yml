name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger only on version tags

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
      fail-fast: false

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel

      - name: Build wheels
        run: |
          cibuildwheel --output-dir wheelhouse

      - name: Upload Linux wheels
        uses: actions/upload-artifact@v3
        with:
          name: linux-wheels
          path: wheelhouse/*

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
      fail-fast: false

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel

      - name: Build wheels
        run: |
          cibuildwheel --output-dir wheelhouse

      - name: Upload macOS wheels
        uses: actions/upload-artifact@v3
        with:
          name: macos-wheels
          path: wheelhouse/*

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
      fail-fast: false

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel

      - name: Build wheels
        run: |
          cibuildwheel --output-dir wheelhouse

      - name: Upload Windows wheels
        uses: actions/upload-artifact@v3
        with:
          name: windows-wheels
          path: wheelhouse/*

  publish:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    if: startsWith(github.ref, 'refs/tags')
    
    steps:
      - name: Download Linux wheels
        uses: actions/download-artifact@v3
        with:
          name: linux-wheels
          path: ./wheelhouse

      - name: Download macOS wheels
        uses: actions/download-artifact@v3
        with:
          name: macos-wheels
          path: ./wheelhouse

      - name: Download Windows wheels
        uses: actions/download-artifact@v3
        with:
          name: windows-wheels
          path: ./wheelhouse

      - name: Install Twine
        run: |
          python -m pip install --upgrade twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload wheelhouse/*